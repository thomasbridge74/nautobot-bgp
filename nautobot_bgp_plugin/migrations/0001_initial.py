# Generated by Django 3.1.14 on 2022-04-15 12:45

import django.core.serializers.json
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tenancy', '0002_auto_slug'),
        ('dcim', '0007_device_secrets_group'),
        ('extras', '0021_customfield_changelog_data'),
        ('ipam', '0005_auto_slug'),
    ]

    operations = [
        migrations.CreateModel(
            name='RoutingPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('_custom_field_data', models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name_plural': 'Routing Policies',
                'unique_together': {('name', 'description')},
            },
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('status', models.CharField(default='active', max_length=50)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('value', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator('\\d+:\\d+')])),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ipam.role')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='community_related', to='dcim.site')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tenancy.tenant')),
            ],
            options={
                'verbose_name_plural': 'Communities',
            },
        ),
        migrations.CreateModel(
            name='BGPPeerGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('_custom_field_data', models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('export_policies', models.ManyToManyField(blank=True, related_name='group_export_policies', to='nautobot_bgp_plugin.RoutingPolicy')),
                ('import_policies', models.ManyToManyField(blank=True, related_name='group_import_policies', to='nautobot_bgp_plugin.RoutingPolicy')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name_plural': 'Peer Groups',
                'unique_together': {('name', 'description')},
            },
        ),
        migrations.CreateModel(
            name='ASNGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dcim.site')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ASN',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('_custom_field_data', models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('status', models.CharField(default='active', max_length=50)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('number', models.PositiveBigIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4294967294)])),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='nautobot_bgp_plugin.asngroup')),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ipam.role')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='asn_related', to='dcim.site')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tenancy.tenant')),
            ],
            options={
                'verbose_name_plural': 'AS Numbers',
            },
        ),
        migrations.CreateModel(
            name='BGPSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('_custom_field_data', models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('name', models.CharField(blank=True, max_length=64, null=True)),
                ('status', models.CharField(default='active', max_length=50)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('device', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='dcim.device')),
                ('export_policies', models.ManyToManyField(blank=True, related_name='session_export_policies', to='nautobot_bgp_plugin.RoutingPolicy')),
                ('import_policies', models.ManyToManyField(blank=True, related_name='session_import_policies', to='nautobot_bgp_plugin.RoutingPolicy')),
                ('local_address', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='local_address', to='ipam.ipaddress')),
                ('local_as', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='local_as', to='nautobot_bgp_plugin.asn')),
                ('peer_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='nautobot_bgp_plugin.bgppeergroup')),
                ('remote_address', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='remote_address', to='ipam.ipaddress')),
                ('remote_as', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='remote_as', to='nautobot_bgp_plugin.asn')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dcim.site')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tenancy.tenant')),
            ],
            options={
                'verbose_name_plural': 'BGP Sessions',
                'unique_together': {('device', 'local_address', 'local_as', 'remote_address', 'remote_as')},
            },
        ),
        migrations.AddConstraint(
            model_name='asn',
            constraint=models.UniqueConstraint(fields=('number', 'tenant'), name='uniqie_number_tenant'),
        ),
        migrations.AddConstraint(
            model_name='asn',
            constraint=models.UniqueConstraint(condition=models.Q(tenant=None), fields=('number',), name='uniqie_number'),
        ),
    ]
